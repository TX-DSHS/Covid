#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <sample_name>"
    exit 1
fi

input_file="demo_$1.txt"
data_directory="/home/dnalab/cecret_runs/$1/reads"
error_encountered=0

# Check if the input file exists
if [ ! -f "$input_file" ]; then
    echo "Error: Input file '$input_file' not found."
    error_encountered=1
else
    echo "Check: Input file exists."
fi

# Check if the data directory exists
if [ ! -d "$data_directory" ]; then
    echo "Error: Data directory '$data_directory' not found."
    error_encountered=1
else
    echo "Check: Data directory exists."
fi

# Check if the file is tab-delimited
if grep -q $'\t' "$input_file"; then
    echo "Check: Input file is tab-delimited."
else
    echo "Error: Input file is not tab-delimited."
    error_encountered=1
fi

# Check if the file has exactly 9 fields or elements
first_row_fields=$(head -n 1 "$input_file" | awk -F'\t' '{print NF}')

if [ "$first_row_fields" -ne 9 ]; then
    echo "Error: The input file does not have exactly 9 fields."
    error_encountered=1
else
    echo "Check: The input file has exactly 9 fields."
fi

# Check date format
while IFS=$'\t' read -r -a fields; do
    date_value="${fields[3]}"  # 4th field (0-based indexing)

    if [ "$date_value" != "#N/A" ] && ! [[ "$date_value" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
        echo "Error: Date format '$date_value' is not YYYY-MM-DD."
        errocountered=1
    elif [ "$date_value" = "Complete/Failed" ]]; then
        continue 
    else 
	echo "$date_value is in the correct format YYYY-MM-DD or #N/A (control)."
    fi
done < "$input_file"


# Check if each ID has a corresponding file in the specified data directory
while IFS=$'\t' read -r id _; do
    # Use find to check for the existence of a file containing the ID in the data directory
    if find "$data_directory" -type f -name "*$id*" | grep -q .; then
        echo "Check: File containing ID '$id' exists in the directory."
    elif [ "$id" == "TX-DSHS-####" ]; then
	echo "Check: File containing ID '$id' exists in the directory."
    else
        echo "Error: File containing ID '$id' does not exist in the directory."
        error_encountered=1
    fi
done < "$input_file"


# Check for the presence of "PositiveSARS" and any line in column 3 that begins with the word "Negative"
if grep -qE "PositiveSARS|Negative.*" "$input_file"; then
    echo "Check: 'PositiveSARS' and 'Negative' with variations are present among the ID names in column 3."
else
    echo "Error: 'PositiveSARS' and 'Negative' with variations must be present among the ID names in column 3."
    error_encountered=1
fi

if [ "$error_encountered" -eq 0 ]; then
    echo "All checks passed successfully!"
else
    echo "One or more checks failed."
fi

#made by Megan Partridge 9/6/2023
